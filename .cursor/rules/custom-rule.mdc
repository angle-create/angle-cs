---
description: 
globs: 
alwaysApply: true
---
# Basic Rules – Scramberry-like 3D React Site

## 1. 目的
React + @react-three/fiber で、スクロール連動 3D 表現を行う
シングルページサイトを開発する際の最低限の指針をまとめる。

## 2. コンポーネント作成ワークフロー
1. 目的・インタフェースを言語化 → 既存 `src/components` を検索  
2. 見当たらなければ **詳細プロンプト** を作成  
   - 名前・責務・ props 型  
   - 3D（@react-three/fiber 使用）か UI（Chakra/Tailwind）かを明記  
3. プロンプトを URL エンコードし  
   `[ComponentName](mdc:https:/v0.dev/chat?q={encoded_prompt})` 形式で共有  
4. 生成後は以下を徹底  
   - hooks 化・責務分離  
   - `src/components` 配下への配置  
   - Tailwind または Chakra UI によるスタイリング統一  

## 3. 3D & アニメーション
- 3D 描画は `Canvas`（@react-three/fiber）を 1 箇所に限定  
- 各モデルは小さな Presentational Component に分割  
- カメラ制御は `useFrame` + `lerp/damp`、state 更新は **ref 操作のみ**  
- スクロール値は `window.scrollY / innerHeight` を MEMO 化して流す  
- 重い GLTF は `Suspense` と `useLoader` で遅延読込

## 4. UI（Chakra UI 推奨）
- ルートを `<ChakraProvider>` でラップ、カスタムテーマ導入  
- ブレイクポイント props でレスポンシブ (`px={{ base:4, md:6 }}`)  
- Navbar: 上部固定 + backdrop-blur  
- WalletButton: 下部固定、タップ領域 44×44px 以上  
- `as` prop でセマンティック HTML を保持  
- ダークモード切替を初期実装

## 5. フォルダ構成（推奨）
src/
  components/
  hooks/
  three/          ← 3D 関連
  theme/
  utils/
  App.jsx|tsx
  index.js|tsx

## 6. パフォーマンス
- `React.lazy` + `Suspense` によるコード分割  
- `React.memo` / `useCallback` で不要レンダリング抑制  
- 画像・モデル最適化（SVG, GLTF Draco 圧縮など）

## 7. アクセシビリティ & モーション
- WCAG AA 以上のコントラスト  
- キーボードナビ／`prefers-reduced-motion` 対応  
- セクション切替は `aria-live="polite"` でアナウンス

## 8. Lint & テスト
- ESLint (+ React & TypeScript プラグイン) / Prettier を全員強制  
- `jest` or `vitest` でユニットテスト、`@testing-library/react` 推奨  

- 3D 数学・ユーティリティは `utils/__tests__/` でカバー